/*************************
Authors: Nicole Smith, Bar Ben-zvi
Date Created: 5/23/19
Brief: Spawns an object when this object is destroyed
*************************/
class SpawnOnDeath : ZilchComponent
{
  //the archetype to spawn when this one dies
  [Property]
  var ObjectToSpawn : Archetype = null;
  
  //if the object should be spawned with an offset
  [Property]
  var OffsetSpawn : Boolean = false;
  
  [Property]
  var SpawnOffset : Real = 0;
  
  [Property]
  var DIE : Boolean = false;
  
  //sound that plays once the plant is created
  [Property]
  var SoundToPlay : SoundCue = null;
  
  function Initialize(init : CogInitializer)
  {
   //destroy owner on collide
    Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
     //when the owner is destroyed
    Zero.Connect(this.Owner, Events.CogDestroy, this.OnCogDestroy);
  }


  function OnCollisionStarted(event : CollisionEvent)
  {
    if(event.OtherObject.DestructableCustomCollision == null && this.DIE)
    {
      this.Owner.Destroy();
    }
  }

  function OnCogDestroy(event : ObjectEvent)
  {
    this.Space.FindObjectByName("GameCamera").ScreenShake.TriggerScreenShake(0.1);
    this.Space.SoundSpace.PlayCue(this.SoundToPlay); 
    //this.Space.SoundSpace.PlayCue(this.SoundToPlay);
    
    var spawnPos = this.Owner.Transform.WorldTranslation - Real3(0, this.Owner.Transform.Scale.Y * this.SpawnOffset, 0);
    
    var object = this.Space.CreateAtPosition(this.ObjectToSpawn, spawnPos);
    
    if(this.OffsetSpawn)
    {
      object.Transform.WorldTranslation += Real3(0, object.Transform.Scale.Y / 2.0, 0);
    }
    
    
  }
}
