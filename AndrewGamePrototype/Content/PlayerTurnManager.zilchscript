//Turn states
enum TurnState{STATEMOVE, STATESHOOT}

class PlayerTurnManager : ZilchComponent
{
  
  var CurrState : TurnState = TurnState.STATEMOVE;
  
  var PlayerArray : Array[Cog] = Array[Cog]();
  
  var CurrIndex : Integer = 0;
  
  var Camera : Cog = null;
  
  var HUDManager : HUDManager = null;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    
    var hudSpace = this.GameSession.FindSpaceByName("HUDSpace");
    
    this.HUDManager = hudSpace.FindObjectByName("LevelSettings").HUDManager;
    
    this.Camera = this.Space.FindObjectByName("GameCamera");
    
    var players = this.Space.FindAllObjectsByName("Player");
    
    foreach(var p in players)
    {
      this.PlayerArray.Add(p);
    }
    
    this.PlayerArray[this.CurrIndex].PlayerMovement.Activate();
    this.PlayerArray[this.CurrIndex].BoxCollider.CollisionGroup = CollisionGroup.CurrentPlayer;
    
    this.Camera.CameraFollow.Target = this.PlayerArray[this.CurrIndex];
    this.HUDManager.CurrPlayer = this.PlayerArray[this.CurrIndex];
    this.HUDManager.Index = 1;
    
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    
    if(Zero.Keyboard.KeyIsPressed(Keys.L))
    {
      if(this.CurrState == TurnState.STATEMOVE)
      {
        this.PlayerArray[this.CurrIndex].PlayerMovement.Active = false;
        this.PlayerArray[this.CurrIndex].PlayerShooting.Active = true;
        this.CurrState = TurnState.STATESHOOT;
        this.HUDManager.CurrState = TurnState.STATESHOOT;
      }
      else
      {
        
        this.PlayerArray[this.CurrIndex].PlayerShooting.Active = false;
        this.PlayerArray[this.CurrIndex].BoxCollider.CollisionGroup = CollisionGroup.Player;
        
        this.CurrIndex += 1;
        
        if(this.CurrIndex >= this.PlayerArray.Count)
        {
          this.CurrIndex = 0;
        }
        
        this.PlayerArray[this.CurrIndex].PlayerMovement.Activate();
        this.CurrState = TurnState.STATEMOVE;
        this.HUDManager.CurrState = TurnState.STATEMOVE;
        
        this.Camera.CameraFollow.Target = this.PlayerArray[this.CurrIndex];
        this.HUDManager.CurrPlayer = this.PlayerArray[this.CurrIndex];
        this.HUDManager.Index = this.CurrIndex + 1;
        
        this.PlayerArray[this.CurrIndex].BoxCollider.CollisionGroup = CollisionGroup.CurrentPlayer;
        
      }
    }
    
  }
}
